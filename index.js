// Generated by CoffeeScript 1.6.3
var $, StretchDiv,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

$ = require('jquery');

StretchDiv = (function() {
  function StretchDiv(options) {
    if (options == null) {
      options = {};
    }
    this.inner = __bind(this.inner, this);
    this.resize = __bind(this.resize, this);
    this.bind = __bind(this.bind, this);
    this.div_dom = $(options.div);
    this.img_dom = options.img ? $(options.img) : false;
    this.resized = options.resized || false;
    this.inners = [];
    this.resize();
    this.bind();
  }

  StretchDiv.prototype.bind = function() {
    return $(window).resize(this.resize);
  };

  StretchDiv.prototype.resize = function() {
    var base_height, base_left, base_top, base_width, container, container_ratio, div, div_height, div_width, inner, padding_left, padding_top, _i, _len, _ref,
      _this = this;
    this.div_dom.height(window.innerHeight);
    this.div_dom.width(window.innerWidth);
    if (this.img_dom) {
      if (this.img_dom.width() > 0 && this.img_dom.height() > 0) {
        if (this.image_ratio == null) {
          this.image_ratio = this.img_dom.width() / this.img_dom.height();
        }
        container = this.div_dom;
        container_ratio = container.width() / container.height();
        if (this.image_ratio >= container_ratio) {
          this.img_dom.css('height', '100%');
          this.img_dom.css('width', 'auto');
          padding_top = 0.0;
          padding_left = -1 * (this.image_ratio * container.height() - container.width()) / 2;
        } else {
          this.img_dom.css('height', 'auto');
          this.img_dom.css('width', '100%');
          padding_top = -1 * ((container.width() / this.image_ratio) - container.height()) / 2;
          padding_left = 0.0;
        }
        this.img_dom.offset({
          top: padding_top,
          left: padding_left
        });
        _ref = this.inners;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          inner = _ref[_i];
          div = inner.div;
          if (inner.base_top) {
            base_top = inner.base_top.offset().top;
          } else {
            base_top = padding_top;
          }
          if (inner.base_left) {
            base_left = inner.base_left.offset().left;
          } else {
            base_left = padding_left;
          }
          if (inner.base_height) {
            base_height = inner.base_height.height();
          } else {
            base_height = this.img_dom.height();
          }
          if (inner.base_width) {
            base_width = inner.base_width.width();
          } else {
            base_width = this.img_dom.width();
          }
          div.offset({
            left: base_width * inner.left + base_left,
            top: (base_height * inner.top) + base_top
          });
          if (inner.height != null) {
            div_height = base_height * inner.height;
            div.height(div_height);
          } else if (inner.bottom != null) {
            div.css({
              bottom: base_height * inner.bottom + padding_top
            });
          }
          if (inner.width) {
            div_width = base_width * inner.width;
            div.width(div_width);
          } else if (inner.right != null) {
            div.css({
              right: base_width * inner.right + padding_left
            });
          }
        }
      } else {
        this.img_dom.bind("load", function() {
          return _this.resize();
        });
      }
    }
    if (this.resized) {
      return this.resized();
    }
  };

  StretchDiv.prototype.inner = function(options) {
    if (options == null) {
      options = {};
    }
    this.inners.push(options);
    return this.resize();
  };

  return StretchDiv;

})();

module.exports = StretchDiv;
